/*
---
name: Base
category: Components/Hexagons
tag: component
---

This component is used with icons, logos, text to visualize or group some concepts. This component
is used in the [Behive component](/category/Components/Display/#Behive) which allows to create a set
hexagons.

##### Options

* `.hexagon`: **Blue hexagon** using the normal size. There are more [sizes available](#Hexagon%20sizes)
* `.hexagon-reverse`: **White hexagon**. Used with dark backgrounds. Both classes have to be added to
the element `.hexagon .hexagon-reverse`
* `.hexagon-outline`: **White hexagon and dark border**. Used with light backgrounds. Both classes
have to be added to the element `.hexagon .hexagon-outline`
* `.hexagon margin-c`: **Hexagon centered**. It will center the hexagon horizontally inside any element.

```html

<div class="container container-tiny">
  <div class="padding-big">
    <div class="hexagon">
      <p class="margin-reset">This is just text</p>
    </div>
  </div>
  <div class="padding-big">
    <div class="hexagon hexagon-outline">
    </div>
  </div>
  <div class="bg-dark padding-big">
    <div class="hexagon hexagon-reverse">
      <img src="/assets/images/gears.svg"/>
    </div>
  </div>
  <div class="padding-big">
    <div class="hexagon margin-c">
      <p class="margin-reset">This is just text</p>
    </div>
  </div>
</div>
```
*/

.hexagon {
  background: url("#{image-endpoint()}hexagon.svg") no-repeat center center;
  background-size: contain;
  width: su(6.5);
  height: su(7.5);

  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  color: color("white");

  svg,
  img {
    max-width: 75%;
  }

  &-reverse {
    background-image: url("#{image-endpoint()}hexagon-reverse.svg");
  }

  &-outline {
    background-image: url("#{image-endpoint()}hexagon-outline.svg");
  }
}

/*
---
name: Inline
category: Components/Hexagons
tag: helpers
---
The hexagon will align vertically with the header text. The size of the hexagon is fixed.
Multiline is supported, the hexagon will align vertically in the middle when multiples
lines.

```html
<div class="bg-dark padding-normal">
  <div class="hexagon-inline">
    <div class="hexagon hexagon-reverse">
      <img src="/assets/images/gears.svg"/>
    </div>
    <h4>This is a regular header with an hexagon next to it.</h4>
  </div>
</div>

<div class="padding-normal">
  <div class="hexagon-inline">
    <div class="hexagon">&nbsp;</div>
    This is regular text with an hexagon next to it.
  </div>
</div>
```
*/

.hexagon-inline {
  display: flex;
  align-items: center;

  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p {
    margin: 0;
  }

  .hexagon {
    width: su(1.3);
    height: su(1.4);
    margin-right: margin("normal");
    flex: none;
    // Fixing icon alignment with this typography
    position: relative;
    top: -0.05em;

    svg,
    img {
      max-width: 60%;
    }
  }
}

/*
---
name: Sizes
category: Components/Hexagons
tag: helpers
---
Change the size of the hexagon. You can combine it with other hexagon classes.

```html
<div class="hexagon margin-v-big"></div>
<div class="hexagon hexagon-small margin-v-big"></div>
<div class="hexagon hexagon-tiny margin-v-big"></div>
```
*/

@each $size-name in 'tiny', 'small' {
  $multiplier: map-get($scale-names, $size-name);
  $size-w: 1;
  $size-h: 1;
  $width: 6.5;
  $height: 7.5;

  $size-w: $width + (1.5 * $multiplier);
  $size-h: $height + (1.5 * $multiplier);

  .hexagon {
    &.hexagon-#{$size-name} {
      width: su($size-w);
      height: su($size-h);
    }
  }
}
